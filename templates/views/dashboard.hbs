<html>

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="Account Level Dashboard for Imperva Incapsula APIs">
    <meta name="author" content="Jonathan Gruber Imperva">
    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="favico.png">

    <title>Main Dashboard</title>
    <!-- CSS LIBRARIES -->
    <!-- Bootstrap Core CSS -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css"
        integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
     <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" type="text/css">
  <link href="css/style.css" rel="stylesheet" type="text/css">
    <!-- Custom CSS -->
    <link href="css/sweetalert/sweetalert.css" rel="stylesheet" type="text/css">
    <link href="css/toastr/toastr.min.css" rel="stylesheet" type="text/css">
</head>


    <style>
        td {
            padding: 7px;
        }
        th {
            padding: 14px;
        }
    </style>

<body >
    <div class="main-wrapper">
        <!-- HEADER BAR  -->
        {{>header}}
    </div>

    <!-- Container fluid for central page  -->
    <div id="export-pdf" class="page-wrapper">

            <!-- Print only dashboard title -->

            <div class="print-only">
                <div class="row">
                    <div class="col-12">
                        <div class="card" style="background-color: white">
                            <div class="card-body" style="background-color: white">
                                <h1>ACCOUNT LEVEL DASHBOARD </h1>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- ROW for column of Account information -->
            <div class="row">

                <!-- account information -->
                <div class="col-md-4">
                    <div class="card card-outline-info">
                        <h2 class="m-b-0"><span id="account_name" class="m-b-0" style="font-weight: bold;">Account
                                Name</span>
                            <span id="account_id" class="m-b-0" style="float:right">00001</span>
                            <br>
                            <br>
                            <table>

                                <tbody>
                                    <tr>
                                        <td>Since: <span id="trial_end" ">tbd</span></td>
                              <td><span id=" nb_users" style="font-weight: bold;">
                                                configured Users </span></td>
                                    </tr>
                                    <tr>
                                        <td>WAF Base Plan: </td>
                                        <td>
                                            <span id="plan_name" style="font-weight: bold;">tbd</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Bandwidth Utilization:</td>
                                        <td> <span id="used_bandwidth" style="font-weight: bold;">0 Mbps</span>
                                            <span id="purchased_bandwidth" style="font-weight: bold;">0 Mbps</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Websites Configured:</td>
                                        <td>
                                            <span id="nb_websites" style="font-weight: bold;">tbd</span></p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                    </div>
                </div>
                <!-- FEATURE LIST -->
                <div class="col-md-4">
                    <div class="card card-outline-info">
                        <h2 class="m-b-0"><span class="m-b-0" style="font-weight: bold;">Activated licenses</span>
                            <table>
                                <tbody>
                                    <tr>
                                        <td style="min-width: 160px;">SIEM license: </td>
                                        <td>
                                            <label class="switch">
                                                <input id="add_on_siem" type="checkbox" disabled>
                                                <span class="slider"></span>
                                            </label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="min-width: 160px;">Attack Analytics: </td>
                                        <td>
                                            <label class="switch">
                                                <input id="add_on_aa" type="checkbox" disabled>
                                                <span class="slider"></span>
                                            </label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="min-width: 160px;">Load Balancing: </td>
                                        <td>
                                            <label class="switch">
                                                <input id="add_on_lb" type="checkbox" disabled>
                                                <span class="slider"></span>
                                            </label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="min-width: 160px;">DDoS: </td>
                                        <td>
                                            <label class="switch">
                                                <input id="add_on_ddos" type="checkbox" disabled>
                                                <span class="slider"></span>
                                            </label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="min-width: 160px;">Support Level: </td>
                                        <td>
                                            <label class="label label-primary"> <span id="support_level">support
                                                    level</span> </label>
                                            </label>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card card-outline-info">
                        <h2 class="m-b-0"><span class="m-b-0" style="font-weight: bold;">Account Structure</span>
                            </br>
                            <h4 class="card-title"> <span id="accountName2">Account Name</span><span
                                    id="accountnbsites"> 1</span></h4>
                            <div class="card-content">
                                <div class="nestable">
                                    <div class="dd">
                                        <ol class="dd-list" id="account_structure">
                                        </ol>
                                    </div>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2>Executive Summary Assessment</h2>
                        </div>
                        <p class="f-w-600" style="margin-top: 30px;">SITES FULLY CONFIGURED <span class="pull-right"
                                id="configured right">0%</span></p>
                        <div class="progress ">
                            <div role="progressbar" id="configured" style="width: 0%;"
                                class="progress-bar bg-success wow animated progress-animated"> <span
                                    class="sr-only">60% Complete</span>
                            </div>
                        </div>
                        <p class="m-t-30 f-w-600" id="block" style="margin-top: 30px;">SECURITY SETTINGS IN BLOCKED
                            MODE<span class="pull-right" id="block right">0%</span></p>
                        <div class="progress">
                            <div role="progressbar" id="block progress" style="width: 0%;"
                                class="progress-bar bg-danger wow animated progress-animated"> <span class="sr-only">60%
                                    Complete</span>
                            </div>
                        </div>
                        <p class="m-t-30 f-w-600" style="margin-top: 30px;">CONFIGURED VS PURCHASED SITES<span
                                class="pull-right" id="configured sites">0%</span></p>
                        <div class="progress">
                            <div role="progressbar" id="configured_sites" style="width: 0%;"
                                class="progress-bar bg-info wow animated progress-animated"> <span class="sr-only">60%
                                    Complete</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2>95-percentile Traffic Utilization of last 3 months</h2>
                        </div>
                        <canvas id="95perc" style="max-height: 300px; width:auto"></canvas>
                    </div>
                </div>
            </div>
            <!-- ROW for line Security Assessment -->
            <div class="pagebreak"> </div>
            <div class="row">
                <div class="col-12">
                    <div class="card" style="background-color: #e6f7ff">
                        <div class="card-body" style="background-color: #e6f7ff">
                            <h1>SECURITY ASSESSMENT SUMMARY </h1>
                        </div>
                    </div>
                </div>
            </div>
            <!-- END ROW for line Security Assessment -->
            <!-- ROW 4 boxes for the 4 cards -->
            <div class="row">
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-globe f-s-40 color-success" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="nb_configured" class="text-success">tbd
                                </h2>
                                <p class="m-b-0">Sites Fully Configured</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-exclamation-triangle f-s-40 color-danger"
                                        style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="nb_security" class="text-danger">tbd</h2>
                                <p class="m-b-0">settings in Block mode</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-bolt f-s-40 color-warning" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="nb_ddos" class="text-warning">tbd</h2>
                                <p class="m-b-0">DDoS thresholds <> Default</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-user f-s-40 color-info" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="nb_incaprules" class="text-info">#</h2>
                                <p class="m-b-0">Incaprules configured</p><span style="font-size: 10px">valid 30days
                                    range only</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- ROW for column of the progress -->
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2># Explicit Security Events per OWASP threat <span style="font-size: 10pt">(on selected
                                    period)</span> </h2>
                        </div>
                        <canvas id="threatChart"></canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2># Custom and DDoS Security Events <span style="font-size: 10pt">(on selected
                                    period)</span> </h2>
                        </div>
                        <canvas id="threatChart_custom"></canvas>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-title">
                            <h2>Human Visitors</h2>
                        </div>
                        <div class="media">
                            <div class="media-left media-middle">
                                <span><i class="fas fa-child color-success" style="font-size:78"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="human_visits" class="text-success">50%</h2>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-title">
                            <h2>Bots Visitors</h2>
                        </div>
                        <div class="media">
                            <div class="media-left media-middle">
                                <h2 id="bot_visits" class="text-danger">50%</h2>
                            </div>
                            <div class="media-body media-text-right">
                                <span><i class="fas fa-robot color-danger" style="font-size:78"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2>Visits per Bot type on all sites</h2>
                        </div>
                        <canvas id="BotsGraph"></canvas>
                    </div>
                </div>
                <!--            <div class="col-md-4" ">
                <div class="card" style="max-height: 500px"> 
                    <div class="card-title">
                        <h4>List of domains: more details</h4> <a style="color:blue" href="raw_tables.html">here</a>
                        </div>
                         <table class="table nowrap table-hover table-bordered table-striped table-responsive" id="api_list_sites">           
                        <tr>
                        <th>Site ID</th>
                        <th>Site Name</th>
                        <th>Site Status</th>
                        </table>
                </div> 
            </div>-->
            </div>
            <!-- END ROW for column of the progress -->
            <!-- ROW for line Performance Assessment TITLE-->
            <div class="pagebreak"> </div>
            <div class="row">
                <div class="col-12">
                    <div class="card" style="background-color: #e6fff2">
                        <div class="card-body" style="background-color: #e6fff2">
                            <h1>PERFORMANCE ASSESSMENT SUMMARY </h1>
                        </div>
                    </div>
                </div>
            </div>
            <!-- END ROW for Performance Assessment -->
            <!-- ROW 4 boxes for the 4 cards -->
            <div class="row">
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-globe f-s-40 color-success" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="trafficVolume" class="text-success">tbd</h2>
                                <p class="m-b-0">Total Traffic period (Gbytes)</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-bolt f-s-40 color-success" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="cachingRatio" class="text-success">tbd</h2>
                                <p class="m-b-0">Global Caching Ratio</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-cloud f-s-40 color-warning" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="cachingSettings" class="text-warning">tbd</h2>
                                <p class="m-b-0">Sites with Static+Dynamic</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card p-30">
                        <div class="media">
                            <div class="media-left meida media-middle">
                                <span><i class="fa fa-signal f-s-40 color-info" style="font-size:28"></i></span>
                            </div>
                            <div class="media-body media-text-right">
                                <h2 id="cached_total" class="text-info">tbd</h2>
                                <p class="m-b-0">Cached Bw (Gbytes)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--  ROW for Traffic Graphs -->
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2># Site Configured Trend last 6 months</h2>
                            <p>
                        </div>
                        <canvas id="site_addition" style="max-height: 300px" ;> </canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2>Accumulated Cached Bandwidth in Account</h2>
                        </div>
                        <canvas id="bwGraph" style="max-height: 300px; width:auto"></canvas>
                    </div>
                </div>
            </div>
            <!--  END ROW for Traffic Graphs -->
            <!-- ROW for serving Data Centers vs visitors -->
            <div class="pagebreak"> </div>
            <!-- Map of Visitors per country row -->
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-title">
                            <h2>Map of Visitors per Country for all Sites</h2>
                        </div>
                        <div id="threatmap"></div>
                    </div>
                </div>
            </div>
            <!--  ROW for Traffic Graphs -->
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2>Visitors per Country (on all sites)</h2>
                            <p>
                        </div>
                        <canvas id="visitorsCountry"></canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-title">
                            <h2>Serving POPs (on all sites)</h2>
                            <p>
                                <span style="font-size: 12px">tip: compare with visited countries to see that customer
                                    is served by best POP</span>
                        </div>
                        <canvas id="POPCountry"></canvas>
                    </div>
                </div>
            </div>
            <!-- END ROW for serving data centers vs visitors -->
            <button class="btn btn-info" onclick="printPage()" style="font-size: 24px;">Generate PDF </button>
    </div>
    <div class="main-wrapper">
        {{>footer}}  
    </div>
</body>
    </html>


    
    <!-- START OF JAVASCRIPT SCRIPTS -->
    <!--JS LIBRARIES -->
    <script src="js/jquery/jquery.min.js"></script>
    <!-- Bootstrap tether Core JavaScript -->
    <script src="js/bootstrap/bootstrap.min.js"></script>
    <script src="js/sweetalert/sweetalert.min.js"></script>
    <!--Charts and scripts JavaScript -->
    <script src="js/calendar-2/moment.latest.min.js"></script>
    <script src="js/Chart.js"></script>
    <script src="js/chartjs-plugin-datalabels.js"></script>
    <script src="js/scripts.js"></script>
    <script src="js/toastr/toastr.min.js"></script>
    </head>
    <script src="js/incapse-graphs.js"></script>
    <script>
        var default_colors = ['#e1e1ea', '#ccffcc', '#ccffff', '#ffccff', ' #ccccff', '#ffe0cc', '#ccfff5', '#ffd9b3', '#ffff80', '#f0b3ff', '#316395', '#ff6666', '#5353c6', '#ff794d', '#6633CC', '#E67300', '#8B0707', '#329262', '#5574A6', '#3B3EAC']
    </script>
    <!-- SECURITY JAVASCRIPTS -->
    <!-- Javascript graph for threat type -->
    <script>
        let myChart = document.getElementById('threatChart').getContext('2d');
        let myChart_Custom = document.getElementById('threatChart_custom').getContext('2d');
        //let myChart = document.getElementById('threatChart').getContext('2d');
        let threatsGraph = new Chart(threatChart, {
            type: 'bar',
            data: {
                labels: ['Suspected Bots', 'Bad Bots', 'XSS', 'SQLi', 'illegal Resource', 'RFi', 'Backdoor'],
                datasets: [{
                    label: 'threats events',
                    data: [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    //backgroundColor:'green',
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)',
                        'rgba(255, 99, 132, 0.6)'
                    ],
                    borderWidth: 1,
                    borderColor: '#777',
                    hoverBorderWidth: 3,
                    hoverBorderColor: '#000'
                }]
            },
            options: {
                plugins: {
                    datalabels: {
                        display: true,
                        anchor: 'end',
                        align: 'top',
                        formatter: Math.round,
                        font: {
                            weight: 'bold',
                            size: '16'
                        }
                    }
                },
                title: {
                    display: false,
                    text: 'Threat Events for selected period',
                    fontSize: 14
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                legend: {
                    display: false,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                },
                tooltips: {
                    enabled: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        display: true,
                        ticks: {
                            beginAtZero: true   // minimum value will be 0.
                        }
                    }],
                    yAxes: [{
                        display: true,
                        gridLines: {
                            display: true,
                            drawBorder: false
                        },
                        display: true,
                        ticks: {
                            beginAtZero: true   // minimum value will be 0.
                        }
                    }]
                }
            }
        });
        let threatsGraph_custom = new Chart(threatChart_custom, {
            type: 'bar',
            data: {
                labels: ['Incaprules', 'Blacklisted URL', 'Blacklisted Country', 'Blacklisted IP', 'DDoS'],
                datasets: [{
                    label: 'threats events',
                    data: [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    //backgroundColor:'green',
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)',
                        'rgba(255, 99, 132, 0.6)'
                    ],
                    borderWidth: 1,
                    borderColor: '#777',
                    hoverBorderWidth: 3,
                    hoverBorderColor: '#000'
                }]
            },
            options: {
                plugins: {
                    datalabels: {
                        display: true,
                        anchor: 'end',
                        align: 'top',
                        formatter: Math.round,
                        font: {
                            weight: 'bold',
                            size: '16'
                        }
                    }
                },
                title: {
                    display: false,
                    text: 'Threat Events for selected period',
                    fontSize: 14
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                legend: {
                    display: false,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                },
                tooltips: {
                    enabled: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        display: true,
                        ticks: {
                            beginAtZero: true   // minimum value will be 0.
                        }
                    }],
                    yAxes: [{
                        display: true,
                        gridLines: {
                            display: true,
                            drawBorder: false
                        },
                        display: true,
                        ticks: {
                            beginAtZero: true   // minimum value will be 0.
                        }
                    }]
                }
            }
        });
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    if (typeof result.incap_rules === 'undefined') {
                        threatsGraph_custom.data.datasets[0].data[0] = 0;
                    } else {
                        threatsGraph_custom.data.datasets[0].data[0] = result.incap_rules[0].incidents;
                    }
                    threatsGraph.data.datasets[0].data[2] = result.threats[0].incidents;
                    threatsGraph_custom.data.datasets[0].data[1] = result.threats[1].incidents;
                    threatsGraph_custom.data.datasets[0].data[2] = result.threats[2].incidents;
                    threatsGraph.data.datasets[0].data[3] = result.threats[3].incidents;
                    threatsGraph_custom.data.datasets[0].data[3] = result.threats[4].incidents;
                    threatsGraph.data.datasets[0].data[4] = result.threats[5].incidents;
                    threatsGraph.data.datasets[0].data[0] = result.threats[6].incidents;
                    threatsGraph.data.datasets[0].data[6] = result.threats[7].incidents;
                    threatsGraph_custom.data.datasets[0].data[4] = result.threats[8].incidents;
                    threatsGraph.data.datasets[0].data[5] = result.threats[9].incidents;
                    threatsGraph.data.datasets[0].data[1] = result.threats[10].incidents;
                    threatsGraph.update();
                    threatsGraph_custom.update();
                }
            });
        });
    </script>
    <!-- Graph for Human / Bot visits -->
    <script>
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var totHumans = 0;
                    var totBots = 0;
                    $(result.visits_timeseries[0].data).each(function (index, value) {
                        totHumans = totHumans + value[1];
                    });
                    $(result.visits_timeseries[1].data).each(function (index, value) {
                        totBots = totBots + value[1];
                    });
                    document.getElementById("human_visits").textContent = Math.round((totHumans / (totHumans + totBots)) * 100) + "%";
                    document.getElementById("bot_visits").textContent = Math.round((totBots / (totHumans + totBots)) * 100) + "%";
                    document.getElementById("human_visits").style.fontSize = Math.max(Math.round((totHumans / (totHumans + totBots)) * 100), 20) + "px";
                    document.getElementById("bot_visits").style.fontSize = Math.max(Math.round((totBots / (totHumans + totBots)) * 100), 20) + "px";
                }
            });
        });
    </script>
    <!-- GRAPH PIE for Visiting Bots Statistics -->
    <script>
        var dataBots = {
            datasets: [{
                data: [
                    3,
                    14
                ],
                backgroundColor: default_colors,
                label: 'My dataset' // for legend
            }],
            labels: [
                "Google",
                "Yahoo"
            ]
        };
        var BotsChart2 = document.getElementById("BotsGraph").getContext('2d');
        var varBotsChart = new Chart(BotsChart2, {
            type: 'doughnut',
            data: dataBots,
            options: {
                plugins: {
                    datalabels: {
                        display: false
                    }
                },
                legend: {
                    display: true,
                    position: 'right',
                    labels: {
                        fontColor: '#000',
                        fontSize: 14,
                        padding: 0
                    }
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                tooltips: {
                    enabled: true
                }
            }
        });
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var BotsRequestsData = 0;
                    var BotsRequestsLabels = 0;
                    var totalBotsRequests = 0;
                    var othersBots = 0;
                    $(result.visits_dist_summary[1].data).each(function (index, value) {
                        totalBotsRequests = totalBotsRequests + value[1];
                    });
                    var i2;
                    var j2 = 1;
                    for (i2 = 0; i2 < result.visits_dist_summary[1].data.length; i2++) {
                        if (result.visits_dist_summary[1].data[i2][1] / totalBotsRequests > 0.04) {
                            varBotsChart.data.datasets[0].data[j2] = Math.round(result.visits_dist_summary[1].data[i2][1] / totalBotsRequests * 100);
                            varBotsChart.data.labels[j2] = result.visits_dist_summary[1].data[i2][0];
                            j2 = j2 + 1;
                        } else {
                            othersBots = othersBots + result.visits_dist_summary[1].data[i2][1];
                        }
                    }
                    varBotsChart.data.datasets[0].data[0] = Math.round(othersBots / totalBotsRequests * 100);
                    varBotsChart.data.labels[0] = "others";
                    varBotsChart.update();
                }
            });
        });
    </script>
    <!-- END Pie for Bots statistics -->
    <!-- list of sites / domains -->
    <!-- print table site list and settings -->
    <script>
        $(document).ready(function () {
            var list_sites = '';
            $.ajax({
                url: 'export_sites.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (data) {
                    $(data).each(function (index, value) {
                        list_sites += '<tr>';
                        list_sites += '<td>' + value.site_id + '</td>';
                        list_sites += '<td>' + value.domain + '</td>';
                        list_sites += '<td>' + value.status + '</td>';
                    });
                    $('#api_list_sites').append(list_sites);
                }
            });
        });
    </script>
    <!-- end list of sites -->
    <script>
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var count_incaprules = 0;
                    //        var varThroughputData = [];
                    $(result.incap_rules_timeseries).each(function (index, value) {
                        if (value.name != "Deleted Rule") {
                            count_incaprules++;
                        }
                    });
                    document.getElementById("nb_incaprules").textContent = count_incaprules;
                }
            });
        });
    </script>
    <!-- graph for Cached Bandwidth per account-->
    <script>
        let bwGraph2 = document.getElementById('bwGraph').getContext('2d');
        var dataCached = {
            datasets: [{
                backgroundColor: '#26dad2',
                borderColor: '#28a745',
                data: [1, 6, 3],
                label: 'Cached Bw (Gbytes)',
                fill: true
            },
            {
                backgroundColor: '#36A2EB',
                borderColor: '#36A2EB',
                data: [2, 7, 8],
                label: 'Total Bw (Gbytes)',
                fill: true
            }],
            labels: ["01", "02", "03"]
        };
        var optionsBw = {
            maintainAspectRatio: false,
            //   spanGaps: false,
            display: true,
            elements: {
                line: {
                    tension: 0.4
                }
            },
            plugins: {
                datalabels: {
                    display: false
                },
                filler: {
                    propagate: false
                }
            },
            scales: {
                xAxes: [{
                    ticks: {
                        autoSkip: false,
                        maxRotation: 0
                    }
                }]
            }
        };
        let varbwGraph = new Chart(bwGraph, {
            type: 'line',
            data: dataCached,
            options: optionsBw
        });
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var BwArray_cached = [];
                    $(result.caching_timeseries[1].data).each(function (index, value) {
                        BwArray_cached.push([value[0], value[1], 0]);
                    });
                    $(result.caching_timeseries[5].data).each(function (index, value) {
                        BwArray_cached[index][2] = value[1];
                    });
                    BwArray_cached.sort(function (a, b) {
                        return a[0] - b[0]
                    });
                    for (var i = 0; i < BwArray_cached.length; i++) {
                        varbwGraph.data.labels[i] = moment(BwArray_cached[i][0]).format('DD MMM');
                        if (i === 0) {
                            varbwGraph.data.datasets[0].data[0] = Math.round(BwArray_cached[0][1] / 1000000000);
                            varbwGraph.data.datasets[1].data[0] = Math.round(BwArray_cached[0][2] / 1000000000);
                        } else {
                            varbwGraph.data.datasets[0].data[i] = Math.round((BwArray_cached[i][1] + BwArray_cached[i - 1][1]) / 1000000);
                            varbwGraph.data.datasets[1].data[i] = Math.round((BwArray_cached[i][2] + BwArray_cached[i - 1][2]) / 1000000);
                            BwArray_cached[i][1] = BwArray_cached[i][1] + BwArray_cached[i - 1][1]
                            BwArray_cached[i][2] = BwArray_cached[i][2] + BwArray_cached[i - 1][2]
                        }
                    }
                    varbwGraph.update();
                }
            });
        });
    </script>
    <!-- END graph for Cached Bandwidth per account-->
    <!--  GRAPH 95 PERC -->
    <script>
        var graphPerc95 = document.getElementById('95perc');
        graphPerc95.height = 200;
        var dataPerc95 = {
            labels: ["Earlier Billing Cycle", "Previous Billing Cycle", "Current Billing Cycle"],
            type: 'line',
            datasets: [{
                backgroundColor: 'rgba(0,103,255,.15)',
                borderColor: 'rgba(0,103,255,0.5)',
                data: [0.1, 0.2, 0.3],
                borderWidth: 3.5,
                pointStyle: 'circle',
                label: '95 percentile Utilization (Mbps)',
                pointRadius: 5,
                pointBorderColor: 'transparent',
                pointBackgroundColor: 'rgba(0,103,255,0.5)'
            }],
        };
        var optionsPerc95 = {
            responsive: true,
            tooltips: {
                mode: 'index',
                titleFontSize: 12,
                titleFontColor: '#000',
                bodyFontColor: '#000',
                backgroundColor: '#fff',
                cornerRadius: 3,
                intersect: false,
            },
            maintainAspectRatio: true,
            display: true,
            elements: {
                line: { tension: 0.4 }
            },
            plugins: {
                datalabels: {
                    display: false
                },
                filler: {
                    propagate: false
                }
            },
            legend: {
                display: false,
                position: 'top',
                labels: {
                    usePointStyle: true,
                },
                scales: {
                    xAxes: [{
                        ticks: {
                            autoSkip: false,
                            maxRotation: 0
                        }
                    }],
                    yAxes: [{
                        display: true,
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Mbps'
                        }
                    }]
                }
            }
        };
        let varGraphPerc95 = new Chart(graphPerc95, {
            type: 'line',
            data: dataPerc95,
            options: optionsPerc95
        });
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_subscriptions.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var perc95_array = [];
                    $(result.bandwidthHistory).each(function (index, value) {
                        perc95_array.unshift([value.billingCycle, parseFloat(value.alwaysOnBandwidth)]);
                    });
                    varGraphPerc95.data.datasets[0].data = [perc95_array[0][1], perc95_array[1][1], perc95_array[2][1]];
                    /* for (var i=0; i<BwArray_cached.length;i++){
                        varGraphPerc95.data.labels[i]=moment(BwArray_cached[i][0]).format('DD MMM');
                    
                            if (i===0){
                        varGraphPerc95.data.datasets[0].data[0] = Math.round(BwArray_cached[0][1]/1000000);
                        graphPerc95.data.datasets[1].data[0] = Math.round(BwArray_cached[0][2]/1000000);
                            }else{    
                            varGraphPerc95.data.datasets[0].data[i] = Math.round((BwArray_cached[i][1]+BwArray_cached[i-1][1])/1000000);
                            gvarGraphPerc95.data.datasets[1].data[i] = Math.round((BwArray_cached[i][2]+BwArray_cached[i-1][2])/1000000);  
                            BwArray_cached[i][1] = BwArray_cached[i][1] + BwArray_cached[i-1][1]
                            BwArray_cached[i][2] = BwArray_cached[i][2] + BwArray_cached[i-1][2]
                                }
                        }
                    */
                    varGraphPerc95.update();
                }
            });
        });
    </script>
    <!-- END GRAPH 95 PERC -->
    <!-- GRAPH PIE for Serving POPs -->
    <script>
        var dataPOP = {
            datasets: [{
                data: [
                    3,
                    14
                ],
                backgroundColor: default_colors,
                label: 'My dataset' // for legend
            }],
            labels: [
                "New York",
                "Paris"
            ]
        };
        var POPCountry2 = document.getElementById("POPCountry").getContext('2d');
        var varPOPChart = new Chart(POPCountry2, {
            type: 'doughnut',
            data: dataPOP,
            options: {
                legend: {
                    display: true,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                },
                plugins: {
                    datalabels: {
                        display: false
                    }
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                tooltips: {
                    enabled: true
                }
            }
        });
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var POPRequestsData = 0;
                    var POPRequestsLabels = 0;
                    var totalPOPRequests = 0;
                    var others = 0;
                    $(result.requests_geo_dist_summary.data).each(function (index, value) {
                        totalPOPRequests = totalPOPRequests + value[1];
                    });
                    var i;
                    var j = 1;
                    for (i = 0; i < result.requests_geo_dist_summary.data.length; i++) {
                        if (result.requests_geo_dist_summary.data[i][1] / totalPOPRequests > 0.01) {
                            varPOPChart.data.datasets[0].data[j] = Math.round(result.requests_geo_dist_summary.data[i][1] / totalPOPRequests * 100);
                            varPOPChart.data.labels[j] = result.requests_geo_dist_summary.data[i][0];
                            j = j + 1;
                        } else {
                            others = others + result.requests_geo_dist_summary.data[i][1];
                        }
                    }
                    varPOPChart.data.datasets[0].data[0] = Math.round(others / totalPOPRequests * 100);
                    varPOPChart.data.labels[0] = "others";
                    varPOPChart.update();
                }
            });
        });
    </script>
    <!-- END GRAPH PIE for Serving POPs -->
    <!-- GRAPH PIE for Visitors Country -->
    <script>
        var dataPOP = {
            datasets: [{
                data: [
                    3,
                    14
                ],
                backgroundColor: default_colors,
                label: 'My dataset' // for legend
            }],
            labels: [
                "New York",
                "Paris"
            ]
        };
        var VisitorsCountry2 = document.getElementById("visitorsCountry").getContext('2d');
        var varVisitorsCountryChart = new Chart(VisitorsCountry2, {
            type: 'doughnut',
            data: dataPOP,
            options: {
                plugins: {
                    datalabels: {
                        display: false
                    }
                },
                legend: {
                    display: true,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                tooltips: {
                    enabled: true
                }
            }
        });
        $(document).ready(function () {
            $.ajax({
                url: 'export_account_stats.json',
                datatype: 'json',
                type: 'get',
                cache: false,
                success: function (result) {
                    var CountryRequestsData = 0;
                    var CountryRequestsLabels = 0;
                    var totalCountryRequests = 0;
                    var othersCountry = 0;
                    $(result.visits_dist_summary[0].data).each(function (index, value) {
                        totalCountryRequests = totalCountryRequests + value[1];
                    });
                    var i2;
                    var j2 = 1;
                    for (i2 = 0; i2 < result.visits_dist_summary[0].data.length; i2++) {
                        if (result.visits_dist_summary[0].data[i2][1] / totalCountryRequests > 0.02) {
                            varVisitorsCountryChart.data.datasets[0].data[j2] = Math.round(result.visits_dist_summary[0].data[i2][1] / totalCountryRequests * 100);
                            varVisitorsCountryChart.data.labels[j2] = result.visits_dist_summary[0].data[i2][0];
                            j2 = j2 + 1;
                        } else {
                            othersCountry = othersCountry + result.visits_dist_summary[0].data[i2][1];
                        }
                    }
                    varVisitorsCountryChart.data.datasets[0].data[0] = Math.round(othersCountry / totalCountryRequests * 100);
                    varVisitorsCountryChart.data.labels[0] = "others";
                    varVisitorsCountryChart.update();
                }
            });
        });
    </script>
</body>
<!-- print Account Plan -->
<script>
    $(document).ready(function () {
        var main_account_name = "";
        var main_account_id = "";
        var count_block = 0;
        var count_alert = 0;
        var count_ddos = 0;
        var count_configured = 0;
        var count_not_configured = 0;
        var count_advCaching = 0;
        $.ajax({
            url: 'export_sites.json',
            datatype: 'json',
            type: 'get',
            cache: false,
            success: function (data_site_settings) {
                console.log("JSON of sites and settings");
                console.log(data_site_settings);
                document.getElementById("accountnbsites").textContent = "- " + data_site_settings.filter(x => x.account_id === main_account_id).length + " sites";
                if (data_site_settings == "null") {
                    toastr.warning('some API calls failed');
                    toastr.error('Check in API Expolorer that you can run /api/prov/v1/sites/list API call', 'API Permissions Error');
                } else if (data_site_settings[0].res_message == "OK") {
                    toastr.success('Data successfully loaded', 'Success');
                } else {
                    toastr.warning('Error when running running API /api/prov/v1/sites/list  ' + data_site_settings[0].res_message, 'Warning');
                }
                $(data_site_settings).each(function (index, value_site_settings) {
                    if (value_site_settings.security.waf.rules[0].action_text === 'Alert Only' | value_site_settings.security.waf.rules[0].action_text === 'Ignore') {
                        count_alert++;
                    } else {
                        count_block++;
                    }
                    if (value_site_settings.security.waf.rules[1].action_text === 'Alert Only' | value_site_settings.security.waf.rules[1].action_text === 'Ignore') {
                        count_alert++;
                    } else {
                        count_block++;
                    }
                    if (value_site_settings.security.waf.rules[2].action_text === 'Alert Only' | value_site_settings.security.waf.rules[2].action_text === 'Ignore') {
                        count_alert++;
                    } else {
                        count_block++;
                    }
                    if (value_site_settings.security.waf.rules[6].action_text === 'Alert Only' | value_site_settings.security.waf.rules[6].action_text === 'Ignore') {
                        count_alert++;
                    } else {
                        count_block++;
                    }
                    if (value_site_settings.security.waf.rules[4].ddos_traffic_threshold === 1000) {
                        count_ddos++;
                    }
                    if (value_site_settings.status === 'fully-configured') {
                        count_configured++;
                    } else {
                        count_not_configured++;
                    }
                    if (value_site_settings.acceleration_level === 'advanced') {
                        count_advCaching++;
                    }
                });
                document.getElementById("block right").innerHTML = Math.round(count_block / (count_alert + count_block) * 100) + "%";
                document.getElementById("block progress").style.width = count_block / (count_alert + count_block) * 100 + "%";
                document.getElementById("configured right").innerHTML = Math.round(count_configured / (count_configured + count_not_configured) * 100) + "%";
                document.getElementById("configured").style.width = count_configured / (count_configured + count_not_configured) * 100 + "%";
                document.getElementById("cachingSettings").textContent = count_advCaching + "/" + (count_configured + count_not_configured);
                document.getElementById("nb_configured").textContent = count_configured + "/" + (count_configured + count_not_configured);
                document.getElementById("nb_security").textContent = count_block + "/" + (count_block + count_alert);
                document.getElementById("nb_ddos").textContent = (count_configured + count_not_configured - count_ddos) + "/" + (count_configured + count_not_configured);
                // SCRIPT TO CREATE THE ACCOUNT STRUCTURE
                var structure_table = "";
                $.ajax({
                    url: 'export_subaccounts.json',
                    datatype: 'json',
                    type: 'get',
                    cache: false,
                    success: function (data_subaccounts) {
                        console.log("JSON of SUBACCOUNTS");
                        console.log(data_subaccounts);
                        if (data_subaccounts.res_message != "OK") {
                            //   toastr.warning(data_subaccounts.res_message, 'permission error in /accounts/listSubbacounts', 'Warning')
                        } else if (data_subaccounts.resultList.length == 0) {
                            var node = document.createElement("LI");
                            var textnode = document.createTextNode("no subaccounts");
                            node.appendChild(textnode);
                            document.getElementById("account_structure").appendChild(node);
                        } else {
                            var subaccount_list = [{ id: main_account_id, name: main_account_name }];
                            $(data_subaccounts.resultList).each(function (index, value_sub) {
                                var node = document.createElement("LI");
                                var textnode = document.createTextNode(value_sub.sub_account_id + "   " + value_sub.sub_account_name + " - " + data_site_settings.filter(x => x.account_id === value_sub.sub_account_id).length + " sites");
                                node.appendChild(textnode);
                                document.getElementById("account_structure").appendChild(node);
                                subaccount_list.push({ id: value_sub.sub_account_id, name: value_sub.sub_account_name });
                                //    document.getElementById("accountnbsites") = data_site_settings.filter(x => x.account_id === value_sub.sub_account_id).length;
                            });
                            // sub = JSON.parse(subaccount_list);
                            console.log("SUBACCOUNTS ARRAY");
                            sessionStorage.setItem("subaccount_list", JSON.stringify(subaccount_list));
                            console.log(subaccount_list);
                        }
                    }
                });
            },
            error: function (data) {
                toastr.warning('error', 'Warning')
                toastr.error('Couldn\'t find the API response. Try to run the login again. Check Readme.md for troubleshooting')
            }
        });
    });
</script>
<!-- print Account Subscriptions -->
<script>
    $(document).ready(function () {
        $.ajax({
            url: 'export_account_subscriptions.json',
            datatype: 'json',
            type: 'get',
            cache: false,
            success: function (data) {
                console.log("JSON of Account Subscription");
                console.log(data);
                document.getElementById("account_name").textContent =  data.planStatus.accountName + " ";
                document.getElementById("plan_name").textContent = "Ent " +  data.planStatus.additionalServices.planSectionRows[0].purchased;
                document.getElementById("account_id").textContent = data.planStatus.accountId;
             //   document.getElementById("trial_end").textContent = data.account.trial_end_date;
            //    document.getElementById("nb_users").textContent = data.logins.length + " configured users";
                document.getElementById("support_level").textContent = data.planStatus.additionalServices.planSectionRows[3].name;
                // Load Balancing add on
                if (data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Load Balancing').purchased != 0) {
                    document.getElementById("add_on_lb").checked = true;
                }
                if (data.planStatus.additionalServices.planSectionRows.find(x => x.name === 'SIEM Integration').purchased != 0) {
                    document.getElementById("add_on_siem").checked = true;
                }
                if (data.planStatus.additionalServices.planSectionRows.find(x => x.name === 'Web Attack Analytics').purchased != 0) {
                    document.getElementById("add_on_aa").checked = true;
                }
                if (data.planStatus.additionalServices.planSectionRows.find(x => x.name === 'DDoS Protection').purchased != "None") {
                    document.getElementById("add_on_ddos").checked = true;
                }
                document.getElementById("used_bandwidth").textContent = data.planStatus.additionalServices.planSectionRows[0].used.slice(0, data.planStatus.additionalServices.planSectionRows[0].used.search("-"));
                document.getElementById("purchased_bandwidth").textContent = data.planStatus.additionalServices.planSectionRows[0].purchased + " purchased";
                document.getElementById("nb_websites").textContent = data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').used + " Used / " + data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').purchased + " Purchased";
                //           document.getElementById("configured_sites").style.width = count_block/(count_alert+count_block)*100 + "%";
                if ((data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').purchased) == "Unlimited") {
                    document.getElementById("configured sites").textContent = "100%";
                    document.getElementById("configured_sites").style.width = "100%";
                } else {
                    document.getElementById("configured sites").textContent = Math.round(100 * parseFloat(data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').used) / parseFloat(data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').purchased)) + "%";
                    document.getElementById("configured_sites").style.width = Math.round(100 * parseFloat(data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').used) / parseFloat(data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').purchased)) + "%";
                }
                //    data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').used +  data.planStatus.websiteProtection.planSectionRows.find(x => x.name === 'Additional Sites').purchased ;
            }
        });
    });
</script>
<!-- complete the Caching Ratio-->
<script>
    $(document).ready(function () {
        var varCached_Bw = 0;
        var varTotal_Bw = 0;
        $.ajax({
            url: 'export_account_stats.json',
            datatype: 'json',
            type: 'get',
            cache: false,
            success: function (data) {
                console.log("JSON of Account Statistics");
                console.log(data);
                varCached_Bw = data.caching.saved_bytes;
                varTotal_Bw = data.caching.total_bytes;
                document.getElementById("cachingRatio").textContent = Math.round(varCached_Bw / (varTotal_Bw) * 100) + "%";
                document.getElementById("trafficVolume").textContent = Math.round(varTotal_Bw / 100000000) / 10;
                document.getElementById("cached_total").textContent = Math.round(varCached_Bw / 100000000) / 10;
            }
        });
    });
</script>
<!-- Map Resources -->
<script src="https://www.amcharts.com/lib/3/ammap.js" type="text/javascript"></script>
<script src="https://www.amcharts.com/lib/3/maps/js/worldHigh.js" type="text/javascript"></script>
<script src="https://www.amcharts.com/lib/3/themes/dark.js" type="text/javascript"></script>
<script src="https://www.amcharts.com/lib/3/maps/js/worldLow.js"></script>
<script type="text/javascript">
    var map = AmCharts.makeChart("mapdiv", {
        type: "map",
        theme: "Map with Bubbles",
        projection: "mercator",
        panEventsEnabled: true,
        backgroundColor: "#535364",
        backgroundAlpha: 1,
        zoomControl: {
            zoomControlEnabled: true
        },
        dataProvider: {
            map: "worldHigh",
            getAreasFromMap: true,
            areas:
                []
        },
        areasSettings: {
            autoZoom: true,
            color: "#B4B4B7",
            colorSolid: "#84ADE9",
            selectedColor: "#84ADE9",
            outlineColor: "#666666",
            rollOverColor: "#9EC2F7",
            rollOverOutlineColor: "#000000"
        }
    });
</script>
<!-- Styles -->
<style>
    #threatmap {
        width: 100%;
        height: 500px;
    }
</style>
<script>
    // Update Circle value for each country
    $(document).ready(function () {
        $.ajax({
            url: 'export_account_stats.json',
            datatype: 'json',
            type: 'get',
            cache: false,
            success: function (data) {
                var randomcolor1 = "";
                $(data.visits_dist_summary[0].data).each(function (index, value) {
                    for (var i = 0; i < mapData.length; i++) {
                        if (mapData[i].code.toLowerCase() === value[0]) {
                            mapData[i].value = value[1];
                            break;
                        }
                    }
                });
                // get min and max values
                var minBulletSize = 0;
                var maxBulletSize = 70;
                var min = Infinity;
                var max = -Infinity;
                for (var i = 0; i < mapData.length; i++) {
                    var value = mapData[i].value;
                    if (value < min) {
                        min = value;
                    }
                    if (value > max) {
                        max = value;
                    }
                }
                // it's better to use circle square to show difference between values, not a radius
                var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;
                var minSquare = minBulletSize * minBulletSize * 2 * Math.PI;
                // create circle for each country
                var images = [];
                for (var i = 0; i < mapData.length; i++) {
                    var dataItem = mapData[i];
                    var value = dataItem.value;
                    // calculate size of a bubble
                    var square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare;
                    if (square < minSquare) {
                        square = minSquare;
                    }
                    var size = Math.sqrt(square / (Math.PI * 2));
                    var id = dataItem.code;
                    if (square > maxSquare / 3) {
                        dataItem.color = "Red"
                    } else if (square > maxSquare / 6) {
                        dataItem.color = "OrangeRed"
                    } else if (square > maxSquare / 12) {
                        dataItem.color = "Blue"
                    } else if (square > maxSquare / 20) {
                        dataItem.color = "YellowGreen"
                    } else {
                        dataItem.color = "Grey"
                    }
                    images.push({
                        "type": "circle",
                        "theme": "none",
                        "width": size,
                        "height": size,
                        "color": dataItem.color,
                        "longitude": latlong[id].longitude,
                        "latitude": latlong[id].latitude,
                        "title": dataItem.name,
                        "value": value
                    });
                }
                console.log("map data info")
                console.log(mapData);
                // build map
                var map = AmCharts.makeChart("threatmap", {
                    "type": "map",
                    "projection": "eckert6",
                    "titles": [{
                        "text": "",
                        "size": 14
                    }],
                    "areasSettings": {
                        //"unlistedAreasColor": "#000000",
                        //"unlistedAreasAlpha": 0.1
                    },
                    "dataProvider": {
                        "map": "worldLow",
                        "images": images
                    },
                    "export": {
                        "enabled": true
                    }
                });
            }
        });
    });
</script>
<!-- Graph of # sites added in last 6 months -->
<script>
    let site_addition3 = document.getElementById('site_addition').getContext('2d');
    var dataSiteAddition = {
        datasets: [{
            backgroundColor: '#62d1f3',
            borderColor: 'rgba(54, 162, 235, 0.6)',
            data: [1, 6, 3, 2, 3, 6],
        }],
        labels: ["Month 1", "Month 2", "Month 3", "Month 4", "last Month", "this Month",]
    };
    var optionsSiteAddition = {
        legend: {
            display: false,
            labels: {
                usePointStyle: true,
                fontFamily: 'Montserrat',
            },
        },
        maintainAspectRatio: false,
        spanGaps: false,
        elements: {
            line: {
                tension: 0.4
            }
        },
        plugins: {
            datalabels: {
                display: true,
                anchor: 'center',
                formatter: Math.round,
                font: {
                    weight: 'bold',
                    size: '16'
                }
            },
            filler: {
                propagate: false
            }
        },
        scales: {
            xAxes: [{
                gridLines: {
                    display: false,
                    drawBorder: false
                }, ticks: {
                    autoSkip: false,
                    maxRotation: 0
                }
            }],
            yAxes: [{
                display: true,
                gridLines: {
                    display: false,
                    drawBorder: false
                },
                ticks: {
                    beginAtZero: true   // minimum value will be 0.
                }
            }]
        }
    };
    let varsiteAddGraph = new Chart(site_addition, {
        type: 'bar',
        data: dataSiteAddition,
        options: optionsSiteAddition
    });
    $(document).ready(function () {
        $.ajax({
            url: 'export_sites.json',
            datatype: 'json',
            type: 'get',
            cache: false,
            success: function (data) {
                var count_sites_month = [0, 0, 0, 0, 0, 0];
                var months_unix = [];
                for (i = 0; i < 6; i++) {
                    months_unix.push(moment().add(i - 5, 'months').unix());
                }
                $(data).each(function (index, value) {
                    for (j = 0; j < 6; j++) {
                        if (value.site_creation_date / 1000 < months_unix[j]) {
                            count_sites_month[j]++;
                        }
                    }
                });
                varsiteAddGraph.data.datasets[0].data = count_sites_month;
                varsiteAddGraph.update();
            }
        });
    });
</script>
<script>
    function printPage() {
        alert("IMPORTANT: enable the option Background graphics in printer option");
        window.print();
    }
</script>